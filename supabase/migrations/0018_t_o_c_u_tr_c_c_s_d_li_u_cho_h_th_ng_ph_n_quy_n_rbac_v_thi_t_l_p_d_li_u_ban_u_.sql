-- Phase 1: RBAC Foundation

-- Step 1: Create the roles table to store distinct user roles.
CREATE TABLE IF NOT EXISTS public.roles (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT NOT NULL UNIQUE,
  description TEXT,
  created_at TIMESTAMPTZ DEFAULT now()
);
COMMENT ON TABLE public.roles IS 'Stores user roles for role-based access control.';

-- Step 2: Create the permissions table to define all possible actions.
CREATE TABLE IF NOT EXISTS public.permissions (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT NOT NULL UNIQUE, -- e.g., 'clients.create', 'projects.delete'
  description TEXT,
  created_at TIMESTAMPTZ DEFAULT now()
);
COMMENT ON TABLE public.permissions IS 'Defines individual permissions for actions within the application.';

-- Step 3: Create the role_permissions join table to link roles and permissions.
CREATE TABLE IF NOT EXISTS public.role_permissions (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  role_id BIGINT NOT NULL REFERENCES public.roles(id) ON DELETE CASCADE,
  permission_id BIGINT NOT NULL REFERENCES public.permissions(id) ON DELETE CASCADE,
  UNIQUE (role_id, permission_id)
);
COMMENT ON TABLE public.role_permissions IS 'Maps permissions to roles, forming the core of the RBAC system.';

-- Step 4: Seed the roles table with existing and potential roles.
INSERT INTO public.roles (name, description) VALUES
  ('BOD', 'Ban giám đốc - Quyền cao nhất'),
  ('Quản lý', 'Quản lý dự án và nhân sự'),
  ('Nhân viên', 'Nhân viên chính thức'),
  ('Thực tập', 'Thực tập sinh')
ON CONFLICT (name) DO NOTHING;

-- Step 5: Seed the permissions table with all defined application permissions.
INSERT INTO public.permissions (name, description) VALUES
  ('dashboard.view', 'Xem trang Dashboard'),
  ('clients.view', 'Xem danh sách và chi tiết khách hàng'),
  ('clients.create', 'Tạo khách hàng mới'),
  ('clients.edit', 'Chỉnh sửa thông tin khách hàng'),
  ('clients.delete', 'Xóa khách hàng'),
  ('projects.view', 'Xem danh sách và chi tiết dự án'),
  ('projects.create', 'Tạo dự án mới'),
  ('projects.edit', 'Chỉnh sửa thông tin dự án'),
  ('projects.delete', 'Xóa dự án'),
  ('leads.view', 'Xem danh sách và chi tiết lead'),
  ('leads.create', 'Tạo lead mới'),
  ('leads.edit', 'Chỉnh sửa thông tin lead'),
  ('leads.delete', 'Xóa lead'),
  ('intern_tasks.view', 'Xem danh sách công việc thực tập sinh'),
  ('intern_tasks.create', 'Giao việc mới cho thực tập sinh'),
  ('intern_tasks.edit', 'Chỉnh sửa công việc của thực tập sinh'),
  ('intern_tasks.delete', 'Xóa công việc của thực tập sinh'),
  ('tasks.view', 'Xem danh sách công việc nội bộ'),
  ('tasks.create', 'Tạo công việc nội bộ mới'),
  ('tasks.edit', 'Chỉnh sửa công việc nội bộ'),
  ('tasks.delete', 'Xóa công việc nội bộ'),
  ('hr.view', 'Xem danh sách nhân sự'),
  ('hr.create', 'Tạo nhân sự mới'),
  ('hr.edit', 'Chỉnh sửa thông tin nhân sự'),
  ('hr.delete', 'Xóa nhân sự'),
  ('permissions.view', 'Xem trang phân quyền'),
  ('permissions.manage', 'Quản lý và thay đổi quyền hạn'),
  ('reports.view', 'Xem trang báo cáo và phân tích')
ON CONFLICT (name) DO NOTHING;

-- Step 6: Grant all permissions to the 'BOD' role by default.
INSERT INTO public.role_permissions (role_id, permission_id)
SELECT
  (SELECT id FROM public.roles WHERE name = 'BOD'),
  p.id
FROM public.permissions p
ON CONFLICT (role_id, permission_id) DO NOTHING;

-- Step 7: Add a role_id foreign key to the personnel table.
ALTER TABLE public.personnel
ADD COLUMN IF NOT EXISTS role_id BIGINT REFERENCES public.roles(id) ON DELETE SET NULL;

-- Update existing personnel to link to the new roles table
UPDATE public.personnel p
SET role_id = (SELECT id FROM public.roles r WHERE r.name = p.role)
WHERE p.role_id IS NULL;